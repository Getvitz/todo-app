{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTask(\"Completed Task\"), this.createTask(\"Editing Task\"), this.createTask(\"Active Task\")],\n      filter: \"All\"\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.changeLabel = (id, label) => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        const newArr = todoData.map(el => {\n          if (el.id === id) {\n            return { ...el,\n              label,\n              completed: false,\n              edited: false\n            };\n          }\n\n          return el;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.editTask = id => {\n      this.setState(_ref5 => {\n        let {\n          todoData\n        } = _ref5;\n        const newArr = todoData.map(el => {\n          if (el.id === id) {\n            return { ...el,\n              edited: true\n            };\n          }\n\n          return el;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.clearTasks = () => {\n      this.setState(_ref6 => {\n        let {\n          todoData\n        } = _ref6;\n        const newArr = [];\n\n        for (let i = 0; i < todoData.length; i++) {\n          if (!todoData[i].completed) {\n            newArr.push(todoData[i]);\n          }\n        }\n\n        return {\n          todoData: newArr\n        };\n      });\n    };\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n      createTime: new Date(),\n      edited: false\n    };\n  }\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;else if (filter === \"Active\") {\n      return todoData.filter(task => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter(task => task.completed);\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      filter\n    } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone,\n          changeLabel: this.changeLabel,\n          editTask: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount,\n          filter: filter,\n          onFilterChange: this.onFilterChange,\n          clearTasks: this.clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","createTask","filter","addTask","text","newTask","setState","newArr","deleteTask","id","idx","findIndex","el","newArray","slice","onToggleDone","oldTask","completed","changeLabel","label","map","edited","editTask","onFilterChange","clearTasks","i","length","push","createTime","Date","filterTasks","task","render","visibleTasks","completedCount","leftTasksCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTask(\"Completed Task\"),\n      this.createTask(\"Editing Task\"),\n      this.createTask(\"Active Task\"),\n    ],\n    filter: \"All\",\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newTask];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n      createTime: new Date(),\n      edited: false,\n    };\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldTask = todoData[idx];\n      const newTask = { ...oldTask, completed: !oldTask.completed };\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newTask,\n        ...todoData.slice(idx + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  changeLabel = (id, label) => {\n    this.setState(({ todoData }) => {\n      const newArr = todoData.map((el) => {\n        if (el.id === id) {\n          return {\n            ...el,\n            label,\n            completed: false,\n            edited: false,\n          };\n        }\n        return el;\n      });\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  editTask = (id) => {\n    this.setState(({ todoData }) => {\n      const newArr = todoData.map((el) => {\n        if (el.id === id) {\n          return {\n            ...el,\n            edited: true,\n          };\n        }\n        return el;\n      });\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;\n    else if (filter === \"Active\") {\n      return todoData.filter((task) => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter((task) => task.completed);\n    }\n  }\n\n  clearTasks = () => {\n    this.setState(({ todoData }) => {\n      const newArr = [];\n      for (let i = 0; i < todoData.length; i++) {\n        if (!todoData[i].completed) {\n          newArr.push(todoData[i]);\n        }\n      }\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  render() {\n    const { todoData, filter } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter((el) => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTaskForm addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            todos={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n            changeLabel={this.changeLabel}\n            editTask={this.editTask}\n          />\n          <Footer\n            leftTasksCount={leftTasksCount}\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n            clearTasks={this.clearTasks}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/edit-task-form/edit-task-form.js\";\n// import react from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class EditTaskForm extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      newLabel: \"\"\n    };\n\n    this.onLabelChange = e => {\n      this.setState({\n        newLabel: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1)\n      });\n    };\n\n    this.onKeyPress = event => {\n      const {\n        changeLabel,\n        id,\n        label\n      } = this.props;\n      const {\n        newLabel\n      } = this.state; // if (event.key === \"Enter\") {\n\n      changeLabel(id, \"KUKU EPTA\"); // }\n      //   console.log(newLabel);\n      //   if (newLabel === \"\") {\n      //     changeLabel(id, label);\n      //   } else {\n      //     changeLabel(id, label);\n      //   }\n      // }\n    };\n  }\n\n  render() {\n    const {\n      label\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"edit\",\n      placeholder: label,\n      onChange: this.onLabelChange,\n      onKeyPress: this.onKeyPress // value={this.state.newLabel}\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nEditTaskForm.defaultProps = {\n  description: \"\",\n  changeLabel: () => {}\n};\nEditTaskForm.propTypes = {\n  label: PropTypes.string,\n  id: PropTypes.number.isRequired,\n  changeLabel: PropTypes.func\n};","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/edit-task-form/edit-task-form.js"],"names":["PropTypes","Component","EditTaskForm","state","newLabel","onLabelChange","e","setState","target","value","charAt","toUpperCase","slice","onKeyPress","event","changeLabel","id","label","props","render","defaultProps","description","propTypes","string","number","isRequired","func"],"mappings":";AAAA;AACA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,gCAA1B;;AAEA,eAAe,MAAMC,YAAN,SAA2BD,SAA3B,CAAqC;AAAA;AAAA;AAAA,SAClDE,KADkD,GAC1C;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD0C;;AAAA,SA8BlDC,aA9BkD,GA8BjCC,CAAD,IAAO;AACrB,WAAKC,QAAL,CAAc;AACZH,QAAAA,QAAQ,EACNE,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,MAAf,CAAsB,CAAtB,EAAyBC,WAAzB,KAAyCL,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeG,KAAf,CAAqB,CAArB;AAF/B,OAAd;AAID,KAnCiD;;AAAA,SAqClDC,UArCkD,GAqCpCC,KAAD,IAAW;AACtB,YAAM;AAAEC,QAAAA,WAAF;AAAeC,QAAAA,EAAf;AAAmBC,QAAAA;AAAnB,UAA6B,KAAKC,KAAxC;AACA,YAAM;AAAEd,QAAAA;AAAF,UAAe,KAAKD,KAA1B,CAFsB,CAItB;;AACAY,MAAAA,WAAW,CAACC,EAAD,EAAK,WAAL,CAAX,CALsB,CAMtB;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACD,KApDiD;AAAA;;AAsDlDG,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEF,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,wBACE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,SAAS,EAAC,MAFZ;AAGE,MAAA,WAAW,EAAED,KAHf;AAIE,MAAA,QAAQ,EAAE,KAAKZ,aAJjB;AAKE,MAAA,UAAU,EAAE,KAAKQ,UALnB,CAME;;AANF;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAlEiD;AAA/BX,Y,CAKZkB,Y,GAAe;AACpBC,EAAAA,WAAW,EAAE,EADO;AAEpBN,EAAAA,WAAW,EAAE,MAAM,CAAE;AAFD,C;AALHb,Y,CAUZoB,S,GAAY;AACjBL,EAAAA,KAAK,EAAEjB,SAAS,CAACuB,MADA;AAEjBP,EAAAA,EAAE,EAAEhB,SAAS,CAACwB,MAAV,CAAiBC,UAFJ;AAGjBV,EAAAA,WAAW,EAAEf,SAAS,CAAC0B;AAHN,C","sourcesContent":["// import react from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Component } from \"react/cjs/react.production.min\";\n\nexport default class EditTaskForm extends Component {\n  state = {\n    newLabel: \"\",\n  };\n\n  static defaultProps = {\n    description: \"\",\n    changeLabel: () => {},\n  };\n\n  static propTypes = {\n    label: PropTypes.string,\n    id: PropTypes.number.isRequired,\n    changeLabel: PropTypes.func,\n  };\n\n  //   onLabelChange = (e) => {\n  //     this.setState({\n  //       label: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n  //     });\n  //   };\n\n  //   onSubmit = (e) => {\n  //     e.preventDefault();\n  //     this.props.addTask(this.state.label);\n  //     this.setState({\n  //       label: \"\",\n  //     });\n  //   };\n\n  onLabelChange = (e) => {\n    this.setState({\n      newLabel:\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n    });\n  };\n\n  onKeyPress = (event) => {\n    const { changeLabel, id, label } = this.props;\n    const { newLabel } = this.state;\n\n    // if (event.key === \"Enter\") {\n    changeLabel(id, \"KUKU EPTA\");\n    // }\n    //   console.log(newLabel);\n\n    //   if (newLabel === \"\") {\n    //     changeLabel(id, label);\n    //   } else {\n    //     changeLabel(id, label);\n    //   }\n    // }\n  };\n\n  render() {\n    const { label } = this.props;\n    return (\n      <input\n        type=\"text\"\n        className=\"edit\"\n        placeholder={label}\n        onChange={this.onLabelChange}\n        onKeyPress={this.onKeyPress}\n        // value={this.state.newLabel}\n      />\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
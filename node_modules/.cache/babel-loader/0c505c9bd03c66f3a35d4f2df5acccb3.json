{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTask(\"Completed Task\"), this.createTask(\"Editing Task\"), this.createTask(\"Active Task\")],\n      filter: \"All\",\n      createTime: formatDistanceToNow(new Date())\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.clearTasks = () => {\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const newArr = [];\n\n        for (let i = 0; i < todoData.length; i++) {\n          if (!todoData[i].completed) {\n            newArr.push(todoData[i]);\n          }\n        }\n\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(createTime => {\n        return {\n          createTime: formatDistanceToNow(new Date())\n        };\n      });\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;else if (filter === \"Active\") {\n      return todoData.filter(task => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter(task => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++ // createTime: formatDistanceToNow(new Date(), {\n      //   includeSeconds: true,\n      // }),\n\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter,\n      createTime\n    } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone,\n          createTime: createTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount,\n          filter: filter,\n          onFilterChange: this.onFilterChange,\n          clearTasks: this.clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","formatDistanceToNow","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","createTask","filter","createTime","Date","onFilterChange","setState","clearTasks","newArr","i","length","completed","push","deleteTask","id","idx","findIndex","el","newArray","slice","addTask","text","newTask","onToggleDone","oldTask","filterTasks","task","label","render","visibleTasks","completedCount","leftTasksCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { formatDistanceToNow } from \"date-fns\";\n\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTask(\"Completed Task\"),\n      this.createTask(\"Editing Task\"),\n      this.createTask(\"Active Task\"),\n    ],\n    filter: \"All\",\n    createTime: formatDistanceToNow(new Date()),\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  clearTasks = () => {\n    this.setState(({ todoData }) => {\n      const newArr = [];\n      for (let i = 0; i < todoData.length; i++) {\n        if (!todoData[i].completed) {\n          newArr.push(todoData[i]);\n        }\n      }\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;\n    else if (filter === \"Active\") {\n      return todoData.filter((task) => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter((task) => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n      // createTime: formatDistanceToNow(new Date(), {\n      //   includeSeconds: true,\n      // }),\n    };\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n    this.setState((createTime) => {\n      return { createTime: formatDistanceToNow(new Date()) };\n    });\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newTask];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldTask = todoData[idx];\n      const newTask = { ...oldTask, completed: !oldTask.completed };\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newTask,\n        ...todoData.slice(idx + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  render() {\n    const { todoData, filter, createTime } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter((el) => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTaskForm addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            todos={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n            createTime={createTime}\n          />\n          <Footer\n            leftTasksCount={leftTasksCount}\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n            clearTasks={this.clearTasks}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
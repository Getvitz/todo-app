{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTask(\"Completed Task\"), this.createTask(\"Editing Task\"), this.createTask(\"Active Task\")],\n      filter: \"All\"\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.clearTasks = todoData => {\n      console.log(\"Hi!\");\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const tasksToDelete = todoData.filter(task => task.completed);\n        console.log(tasksToDelete);\n        const newArr = [];\n\n        for (let i = 0; i < todoData.length; i++) {\n          for (let j = 0; j < tasksToDelete.length; j++) {\n            if (todoData[i] !== tasksToDelete[j]) {\n              newArr.push(todoData[i]);\n            }\n          }\n        }\n\n        console.log(newArr); // const newArr = [todoData.slice(tasksToDelete)]\n        // const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        // return {\n        //   todoData: newArray,\n        // };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;else if (filter === \"Active\") {\n      return todoData.filter(task => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter(task => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter\n    } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount,\n          filter: filter,\n          onFilterChange: this.onFilterChange,\n          clearTasks: this.clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","createTask","filter","onFilterChange","setState","clearTasks","console","log","tasksToDelete","task","completed","newArr","i","length","j","push","deleteTask","id","idx","findIndex","el","newArray","slice","addTask","text","newTask","onToggleDone","oldTask","filterTasks","label","render","visibleTasks","completedCount","leftTasksCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTask(\"Completed Task\"),\n      this.createTask(\"Editing Task\"),\n      this.createTask(\"Active Task\"),\n    ],\n    filter: \"All\",\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  clearTasks = (todoData) => {\n    console.log(\"Hi!\");\n    this.setState(({ todoData }) => {\n      const tasksToDelete = todoData.filter((task) => task.completed);\n      console.log(tasksToDelete);\n      const newArr = [];\n      for (let i = 0; i < todoData.length; i++) {\n        for (let j = 0; j < tasksToDelete.length; j++) {\n          if (todoData[i] !== tasksToDelete[j]) {\n            newArr.push(todoData[i]);\n          }\n        }\n      }\n      console.log(newArr);\n      // const newArr = [todoData.slice(tasksToDelete)]\n      // const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      // return {\n      //   todoData: newArray,\n      // };\n    });\n  };\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;\n    else if (filter === \"Active\") {\n      return todoData.filter((task) => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter((task) => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n    };\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newTask];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldTask = todoData[idx];\n      const newTask = { ...oldTask, completed: !oldTask.completed };\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newTask,\n        ...todoData.slice(idx + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  render() {\n    const { todoData, filter } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter((el) => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTaskForm addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            todos={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n          />\n          <Footer\n            leftTasksCount={leftTasksCount}\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n            clearTasks={this.clearTasks}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from \"react\"; // import Task from \"../task\";\n\nimport TaskList from \"../task-list\"; // import TaskFilter from \"../task-filter\";\n\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\"; // import Footer from \"../footer\";\n// import \"./app.css\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTask(\"Completed Task\"), this.createTask(\"Editing Task\"), this.createTask(\"Active Task\")]\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    const {\n      todoData\n    } = this.state;\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: todoData,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","createTask","deleteTask","id","setState","idx","findIndex","el","newArray","slice","addTask","text","newTask","newArr","onToggleDone","oldTask","completed","label","render","completedCount","filter","length","leftTasksCount"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\n// import Task from \"../task\";\nimport TaskList from \"../task-list\";\n// import TaskFilter from \"../task-filter\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\n// import Footer from \"../footer\";\n\n// import \"./app.css\";\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      this.createTask(\"Completed Task\"),\n      this.createTask(\"Editing Task\"),\n      this.createTask(\"Active Task\"),\n    ],\n  };\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n    };\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newTask];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldTask = todoData[idx];\n      const newTask = { ...oldTask, completed: !oldTask.completed };\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newTask,\n        ...todoData.slice(idx + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  render() {\n    const { todoData } = this.state;\n\n    const completedCount = todoData.filter((el) => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTaskForm addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            todos={todoData}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n          />\n          <Footer leftTasksCount={leftTasksCount} />\n        </section>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
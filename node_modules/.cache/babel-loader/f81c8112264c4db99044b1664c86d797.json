{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/task-filter/task-filter.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst filterButtons = [{\n  name: \"All\",\n  label: \"All\"\n}, {\n  name: \"Active\",\n  label: \"Active\"\n}, {\n  name: \"Completed\",\n  label: \"Completed\"\n}];\n\nconst TaskFilter = _ref => {\n  let {\n    filter,\n    onFilterChange = () => {}\n  } = _ref;\n  const buttons = filterButtons.map(_ref2 => {\n    let {\n      name,\n      label\n    } = _ref2;\n    const isActive = name === filter;\n    const classNames = isActive ? \"selected\" : \"\";\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => onFilterChange(name),\n        className: classNames,\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"filters\",\n    children: buttons\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n\n_c = TaskFilter;\nexport default TaskFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskFilter\");","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/task-filter/task-filter.js"],"names":["filterButtons","name","label","TaskFilter","filter","onFilterChange","buttons","map","isActive","classNames"],"mappings":";;AAAA,MAAMA,aAAa,GAAG,CACpB;AAAEC,EAAAA,IAAI,EAAE,KAAR;AAAeC,EAAAA,KAAK,EAAE;AAAtB,CADoB,EAEpB;AAAED,EAAAA,IAAI,EAAE,QAAR;AAAkBC,EAAAA,KAAK,EAAE;AAAzB,CAFoB,EAGpB;AAAED,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,KAAK,EAAE;AAA5B,CAHoB,CAAtB;;AAMA,MAAMC,UAAU,GAAG,QAA2C;AAAA,MAA1C;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,cAAc,GAAG,MAAM,CAAE;AAAnC,GAA0C;AAC5D,QAAMC,OAAO,GAAGN,aAAa,CAACO,GAAd,CAAkB,SAAqB;AAAA,QAApB;AAAEN,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAoB;AACrD,UAAMM,QAAQ,GAAGP,IAAI,KAAKG,MAA1B;AACA,UAAMK,UAAU,GAAGD,QAAQ,GAAG,UAAH,GAAgB,EAA3C;AACA,wBACE;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE,MAAMH,cAAc,CAACJ,IAAD,CAF/B;AAGE,QAAA,SAAS,EAAEQ,UAHb;AAAA,kBAKGP;AALH;AAAA;AAAA;AAAA;AAAA;AADF,OAASD,IAAT;AAAA;AAAA;AAAA;AAAA,YADF;AAWD,GAde,CAAhB;AAgBA,sBAAO;AAAI,IAAA,SAAS,EAAC,SAAd;AAAA,cAAyBK;AAAzB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlBD;;KAAMH,U;AAoBN,eAAeA,UAAf","sourcesContent":["const filterButtons = [\n  { name: \"All\", label: \"All\" },\n  { name: \"Active\", label: \"Active\" },\n  { name: \"Completed\", label: \"Completed\" },\n];\n\nconst TaskFilter = ({ filter, onFilterChange = () => {} }) => {\n  const buttons = filterButtons.map(({ name, label }) => {\n    const isActive = name === filter;\n    const classNames = isActive ? \"selected\" : \"\";\n    return (\n      <li key={name}>\n        <button\n          type=\"button\"\n          onClick={() => onFilterChange(name)}\n          className={classNames}\n        >\n          {label}\n        </button>\n      </li>\n    );\n  });\n\n  return <ul className=\"filters\">{buttons}</ul>;\n};\n\nexport default TaskFilter;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/task/task.js\";\nimport { Component } from 'react/cjs/react.production.min';\nimport EditTaskForm from '../edit-task-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  render() {\n    const {\n      label,\n      id,\n      onDeleted,\n      onToggleDone,\n      completed,\n      createTimeToNow,\n      editTask,\n      changeLabel,\n      edited\n    } = this.props;\n    let checked = false;\n    let classNames = 'view';\n\n    if (completed === true) {\n      classNames += ' completed';\n      checked = true;\n    }\n\n    if (edited === true) {\n      classNames += ' editing';\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        onClick: onToggleDone,\n        readOnly: true,\n        checked: checked\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        onClick: onToggleDone,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: label || alert('You created empty task! Please delete it and type smth before adding to list!')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: createTimeToNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\",\n        onClick: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: onDeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this), edited ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n        id: id,\n        label: label,\n        changeLabel: changeLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, this) : null]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 4\n    }, this);\n  }\n\n}\nTask.defaultProps = {\n  label: 'Nothing received..',\n  completed: false,\n  onDeleted: () => {},\n  onToggleDone: () => {} // checked: false,\n\n};\nTask.propTypes = {\n  label: (props, propName, componentName) => {\n    const value = props[propName];\n    if (typeof value === 'string') return null;\n    return new TypeError(`${componentName}: ${propName} must be string`);\n  },\n  completed: (props, propName, componentName) => {\n    const value = props[propName];\n    if (typeof value === 'boolean') return null;\n    return new TypeError(`${componentName}: ${propName} must be boolean`);\n  }\n};","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/task/task.js"],"names":["Component","EditTaskForm","Task","render","label","id","onDeleted","onToggleDone","completed","createTimeToNow","editTask","changeLabel","edited","props","checked","classNames","alert","defaultProps","propTypes","propName","componentName","value","TypeError"],"mappings":";AAAA,SAASA,SAAT,QAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAuB3CG,EAAAA,MAAM,GAAG;AACR,UAAM;AACLC,MAAAA,KADK;AAELC,MAAAA,EAFK;AAGLC,MAAAA,SAHK;AAILC,MAAAA,YAJK;AAKLC,MAAAA,SALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA,QAPK;AAQLC,MAAAA,WARK;AASLC,MAAAA;AATK,QAUF,KAAKC,KAVT;AAWA,QAAIC,OAAO,GAAG,KAAd;AACA,QAAIC,UAAU,GAAG,MAAjB;;AACA,QAAIP,SAAS,KAAK,IAAlB,EAAwB;AACvBO,MAAAA,UAAU,IAAI,YAAd;AACAD,MAAAA,OAAO,GAAG,IAAV;AACA;;AACD,QAAIF,MAAM,KAAK,IAAf,EAAqB;AACpBG,MAAAA,UAAU,IAAI,UAAd;AACA;;AAED,wBACC;AAAa,MAAA,SAAS,EAAEA,UAAxB;AAAA,8BACC;AACC,QAAA,SAAS,EAAC,QADX;AAEC,QAAA,IAAI,EAAC,UAFN;AAGC,QAAA,OAAO,EAAER,YAHV;AAIC,QAAA,QAAQ,MAJT;AAKC,QAAA,OAAO,EAAEO;AALV;AAAA;AAAA;AAAA;AAAA,cADD,eAQC;AAAO,QAAA,OAAO,EAAEP,YAAhB;AAAA,gCACC;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBACEH,KAAK,IACKY,KAAK,CACP,+EADO;AAFjB;AAAA;AAAA;AAAA;AAAA,gBADD,eAOC;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,oBAA2BP;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cARD,eAiBC;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAjBD,eAkBC;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,cAlBD,EAmBEM,MAAM,gBACN,QAAC,YAAD;AAAc,QAAA,EAAE,EAAEP,EAAlB;AAAsB,QAAA,KAAK,EAAED,KAA7B;AAAoC,QAAA,WAAW,EAAEO;AAAjD;AAAA;AAAA;AAAA;AAAA,cADM,GAEH,IArBL;AAAA,OAASN,EAAT;AAAA;AAAA;AAAA;AAAA,YADD;AAyBA;;AAtE0C;AAAvBH,I,CACbe,Y,GAAe;AACrBb,EAAAA,KAAK,EAAE,oBADc;AAErBI,EAAAA,SAAS,EAAE,KAFU;AAGrBF,EAAAA,SAAS,EAAE,MAAM,CAAE,CAHE;AAIrBC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAJD,CAKrB;;AALqB,C;AADFL,I,CASbgB,S,GAAY;AAClBd,EAAAA,KAAK,EAAE,CAACS,KAAD,EAAQM,QAAR,EAAkBC,aAAlB,KAAoC;AAC1C,UAAMC,KAAK,GAAGR,KAAK,CAACM,QAAD,CAAnB;AACA,QAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B,OAAO,IAAP;AAC/B,WAAO,IAAIC,SAAJ,CAAe,GAAEF,aAAc,KAAID,QAAS,iBAA5C,CAAP;AACA,GALiB;AAOlBX,EAAAA,SAAS,EAAE,CAACK,KAAD,EAAQM,QAAR,EAAkBC,aAAlB,KAAoC;AAC9C,UAAMC,KAAK,GAAGR,KAAK,CAACM,QAAD,CAAnB;AACA,QAAI,OAAOE,KAAP,KAAiB,SAArB,EAAgC,OAAO,IAAP;AAChC,WAAO,IAAIC,SAAJ,CAAe,GAAEF,aAAc,KAAID,QAAS,kBAA5C,CAAP;AACA;AAXiB,C","sourcesContent":["import { Component } from 'react/cjs/react.production.min';\nimport EditTaskForm from '../edit-task-form';\n\nexport default class Task extends Component {\n\tstatic defaultProps = {\n\t\tlabel: 'Nothing received..',\n\t\tcompleted: false,\n\t\tonDeleted: () => {},\n\t\tonToggleDone: () => {},\n\t\t// checked: false,\n\t};\n\n\tstatic propTypes = {\n\t\tlabel: (props, propName, componentName) => {\n\t\t\tconst value = props[propName];\n\t\t\tif (typeof value === 'string') return null;\n\t\t\treturn new TypeError(`${componentName}: ${propName} must be string`);\n\t\t},\n\n\t\tcompleted: (props, propName, componentName) => {\n\t\t\tconst value = props[propName];\n\t\t\tif (typeof value === 'boolean') return null;\n\t\t\treturn new TypeError(`${componentName}: ${propName} must be boolean`);\n\t\t},\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tlabel,\n\t\t\tid,\n\t\t\tonDeleted,\n\t\t\tonToggleDone,\n\t\t\tcompleted,\n\t\t\tcreateTimeToNow,\n\t\t\teditTask,\n\t\t\tchangeLabel,\n\t\t\tedited,\n\t\t} = this.props;\n\t\tlet checked = false;\n\t\tlet classNames = 'view';\n\t\tif (completed === true) {\n\t\t\tclassNames += ' completed';\n\t\t\tchecked = true;\n\t\t}\n\t\tif (edited === true) {\n\t\t\tclassNames += ' editing';\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={id} className={classNames}>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"toggle\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={onToggleDone}\n\t\t\t\t\treadOnly\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t\t<label onClick={onToggleDone}>\n\t\t\t\t\t<span className=\"description\">\n\t\t\t\t\t\t{label\n              || alert(\n              \t'You created empty task! Please delete it and type smth before adding to list!',\n              )}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"created\">{createTimeToNow}</span>\n\t\t\t\t</label>\n\t\t\t\t<button className=\"icon icon-edit\" onClick={editTask}></button>\n\t\t\t\t<button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n\t\t\t\t{edited ? (\n\t\t\t\t\t<EditTaskForm id={id} label={label} changeLabel={changeLabel} />\n\t\t\t\t) : null}\n\t\t\t</li>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/task/task.js\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport EditTaskForm from \"../edit-task-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Task extends Component {\n  render() {\n    const {\n      label,\n      key,\n      onDeleted,\n      onToggleDone,\n      completed,\n      createTimeToNow,\n      editTask,\n      changeLabel,\n      edited\n    } = this.props;\n    let classNames = \"view\";\n\n    if (completed === true) {\n      classNames += \" completed\";\n    }\n\n    if (edited === true) {\n      classNames += \" editing\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      className: classNames,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        onClick: onToggleDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"description\",\n          children: label || alert(\"You created empty task! Please delete it and type smth before adding to list!\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"created\",\n          children: createTimeToNow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-edit\",\n        onClick: editTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon icon-destroy\",\n        onClick: onDeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), edited ? /*#__PURE__*/_jsxDEV(EditTaskForm, {\n        label: label,\n        changeLabel: changeLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nTask.defaultProps = {\n  label: \"Nothing received..\",\n  completed: false,\n  onDeleted: () => {},\n  onToggleDone: () => {},\n  key: \"2\"\n};\nTask.propTypes = {\n  label: (props, propName, componentName) => {\n    const value = props[propName];\n    if (typeof value === \"string\") return null;else return new TypeError(`${componentName}: ${propName} must be string`);\n  },\n  completed: (props, propName, componentName) => {\n    const value = props[propName];\n    if (typeof value === \"boolean\") return null;else return new TypeError(`${componentName}: ${propName} must be boolean`);\n  }\n};","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/task/task.js"],"names":["Component","EditTaskForm","Task","render","label","key","onDeleted","onToggleDone","completed","createTimeToNow","editTask","changeLabel","edited","props","classNames","alert","defaultProps","propTypes","propName","componentName","value","TypeError"],"mappings":";AAAA,SAASA,SAAT,QAA0B,gCAA1B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA6B;AAwB1CG,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,KADI;AAEJC,MAAAA,GAFI;AAGJC,MAAAA,SAHI;AAIJC,MAAAA,YAJI;AAKJC,MAAAA,SALI;AAMJC,MAAAA,eANI;AAOJC,MAAAA,QAPI;AAQJC,MAAAA,WARI;AASJC,MAAAA;AATI,QAUF,KAAKC,KAVT;AAWA,QAAIC,UAAU,GAAG,MAAjB;;AACA,QAAIN,SAAS,KAAK,IAAlB,EAAwB;AACtBM,MAAAA,UAAU,IAAI,YAAd;AACD;;AACD,QAAIF,MAAM,KAAK,IAAf,EAAqB;AACnBE,MAAAA,UAAU,IAAI,UAAd;AACD;;AAED,wBACE;AAAI,MAAA,SAAS,EAAEA,UAAf;AAAA,8BACE;AAAO,QAAA,SAAS,EAAC,QAAjB;AAA0B,QAAA,IAAI,EAAC,UAA/B;AAA0C,QAAA,OAAO,EAAEP;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,aAAhB;AAAA,oBACGH,KAAK,IACJW,KAAK,CACH,+EADG;AAFT;AAAA;AAAA;AAAA;AAAA,gBADF,eAOE;AAAM,UAAA,SAAS,EAAC,SAAhB;AAAA,oBAA2BN;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAWE;AAAQ,QAAA,SAAS,EAAC,gBAAlB;AAAmC,QAAA,OAAO,EAAEC;AAA5C;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAsC,QAAA,OAAO,EAAEJ;AAA/C;AAAA;AAAA;AAAA;AAAA,cAZF,EAaGM,MAAM,gBACL,QAAC,YAAD;AAAc,QAAA,KAAK,EAAER,KAArB;AAA4B,QAAA,WAAW,EAAEO;AAAzC;AAAA;AAAA;AAAA;AAAA,cADK,GAEH,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AA/DyC;AAAvBT,I,CACZc,Y,GAAe;AACpBZ,EAAAA,KAAK,EAAE,oBADa;AAEpBI,EAAAA,SAAS,EAAE,KAFS;AAGpBF,EAAAA,SAAS,EAAE,MAAM,CAAE,CAHC;AAIpBC,EAAAA,YAAY,EAAE,MAAM,CAAE,CAJF;AAKpBF,EAAAA,GAAG,EAAE;AALe,C;AADHH,I,CASZe,S,GAAY;AACjBb,EAAAA,KAAK,EAAE,CAACS,KAAD,EAAQK,QAAR,EAAkBC,aAAlB,KAAoC;AACzC,UAAMC,KAAK,GAAGP,KAAK,CAACK,QAAD,CAAnB;AACA,QAAI,OAAOE,KAAP,KAAiB,QAArB,EAA+B,OAAO,IAAP,CAA/B,KACK,OAAO,IAAIC,SAAJ,CAAe,GAAEF,aAAc,KAAID,QAAS,iBAA5C,CAAP;AACN,GALgB;AAOjBV,EAAAA,SAAS,EAAE,CAACK,KAAD,EAAQK,QAAR,EAAkBC,aAAlB,KAAoC;AAC7C,UAAMC,KAAK,GAAGP,KAAK,CAACK,QAAD,CAAnB;AACA,QAAI,OAAOE,KAAP,KAAiB,SAArB,EAAgC,OAAO,IAAP,CAAhC,KAEE,OAAO,IAAIC,SAAJ,CAAe,GAAEF,aAAc,KAAID,QAAS,kBAA5C,CAAP;AACH;AAZgB,C","sourcesContent":["import { Component } from \"react/cjs/react.production.min\";\nimport EditTaskForm from \"../edit-task-form\";\n\nexport default class Task extends Component {\n  static defaultProps = {\n    label: \"Nothing received..\",\n    completed: false,\n    onDeleted: () => {},\n    onToggleDone: () => {},\n    key: \"2\",\n  };\n\n  static propTypes = {\n    label: (props, propName, componentName) => {\n      const value = props[propName];\n      if (typeof value === \"string\") return null;\n      else return new TypeError(`${componentName}: ${propName} must be string`);\n    },\n\n    completed: (props, propName, componentName) => {\n      const value = props[propName];\n      if (typeof value === \"boolean\") return null;\n      else\n        return new TypeError(`${componentName}: ${propName} must be boolean`);\n    },\n  };\n\n  render() {\n    const {\n      label,\n      key,\n      onDeleted,\n      onToggleDone,\n      completed,\n      createTimeToNow,\n      editTask,\n      changeLabel,\n      edited,\n    } = this.props;\n    let classNames = \"view\";\n    if (completed === true) {\n      classNames += \" completed\";\n    }\n    if (edited === true) {\n      classNames += \" editing\";\n    }\n\n    return (\n      <li className={classNames}>\n        <input className=\"toggle\" type=\"checkbox\" onClick={onToggleDone} />\n        <label>\n          <span className=\"description\">\n            {label ||\n              alert(\n                \"You created empty task! Please delete it and type smth before adding to list!\"\n              )}\n          </span>\n          <span className=\"created\">{createTimeToNow}</span>\n        </label>\n        <button className=\"icon icon-edit\" onClick={editTask}></button>\n        <button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n        {edited ? (\n          <EditTaskForm label={label} changeLabel={changeLabel} />\n        ) : null}\n      </li>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
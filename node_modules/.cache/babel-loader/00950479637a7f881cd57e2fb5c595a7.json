{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/task-list/task-list.js\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport propTypes from \"prop-types\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport Task from \"../task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TaskList extends Component {\n  render() {\n    // creation - WRONG\n    // todos\n    //   [ { label, creationDateTime <-- RIGHT}\n    //\n    const {\n      todos,\n      onDeleted,\n      onToggleDone\n    } = this.props;\n    const elements = todos.map(item => {\n      const created = new Date(item.createTime);\n      const createTime = setInterval(formatDistanceToNow(created, {\n        includeSeconds: true\n      }), 1000);\n      return /*#__PURE__*/_jsxDEV(Task, {\n        label: item.label,\n        onDeleted: () => onDeleted(item.id),\n        onToggleDone: () => onToggleDone(item.id),\n        completed: item.completed,\n        createTime: createTime\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"todo-list\",\n      children: elements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nTaskList.defaultProps = {\n  todos: [{\n    label: \"Default task 1\",\n    completed: false,\n    id: 1\n  }, {\n    label: \"Default task 2\",\n    completed: false,\n    id: 2\n  }],\n  onToggleDone: () => {},\n  onDeleted: () => {}\n};\nTaskList.propTypes = {\n  todos: propTypes.arrayOf(propTypes.object)\n};","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/task-list/task-list.js"],"names":["formatDistanceToNow","propTypes","Component","Task","TaskList","render","todos","onDeleted","onToggleDone","props","elements","map","item","created","Date","createTime","setInterval","includeSeconds","label","id","completed","defaultProps","arrayOf","object"],"mappings":";AAAA,SAASA,mBAAT,QAAoC,UAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC9CG,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AAEA,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,SAAT;AAAoBC,MAAAA;AAApB,QAAqC,KAAKC,KAAhD;AACA,UAAMC,QAAQ,GAAGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AACnC,YAAMC,OAAO,GAAG,IAAIC,IAAJ,CAASF,IAAI,CAACG,UAAd,CAAhB;AACA,YAAMA,UAAU,GAAGC,WAAW,CAC5BhB,mBAAmB,CAACa,OAAD,EAAU;AAC3BI,QAAAA,cAAc,EAAE;AADW,OAAV,CADS,EAI5B,IAJ4B,CAA9B;AAMA,0BACE,QAAC,IAAD;AAEE,QAAA,KAAK,EAAEL,IAAI,CAACM,KAFd;AAGE,QAAA,SAAS,EAAE,MAAMX,SAAS,CAACK,IAAI,CAACO,EAAN,CAH5B;AAIE,QAAA,YAAY,EAAE,MAAMX,YAAY,CAACI,IAAI,CAACO,EAAN,CAJlC;AAKE,QAAA,SAAS,EAAEP,IAAI,CAACQ,SALlB;AAME,QAAA,UAAU,EAAEL;AANd,SACOH,IAAI,CAACO,EADZ;AAAA;AAAA;AAAA;AAAA,cADF;AAUD,KAlBgB,CAAjB;AAoBA,wBAAO;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA,gBAA2BT;AAA3B;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA7B6C;AAgChDN,QAAQ,CAACiB,YAAT,GAAwB;AACtBf,EAAAA,KAAK,EAAE,CACL;AAAEY,IAAAA,KAAK,EAAE,gBAAT;AAA2BE,IAAAA,SAAS,EAAE,KAAtC;AAA6CD,IAAAA,EAAE,EAAE;AAAjD,GADK,EAEL;AAAED,IAAAA,KAAK,EAAE,gBAAT;AAA2BE,IAAAA,SAAS,EAAE,KAAtC;AAA6CD,IAAAA,EAAE,EAAE;AAAjD,GAFK,CADe;AAKtBX,EAAAA,YAAY,EAAE,MAAM,CAAE,CALA;AAMtBD,EAAAA,SAAS,EAAE,MAAM,CAAE;AANG,CAAxB;AASAH,QAAQ,CAACH,SAAT,GAAqB;AACnBK,EAAAA,KAAK,EAAEL,SAAS,CAACqB,OAAV,CAAkBrB,SAAS,CAACsB,MAA5B;AADY,CAArB","sourcesContent":["import { formatDistanceToNow } from \"date-fns\";\nimport propTypes from \"prop-types\";\nimport { Component } from \"react/cjs/react.production.min\";\nimport Task from \"../task\";\n\nexport default class TaskList extends Component {\n  render() {\n    // creation - WRONG\n    // todos\n    //   [ { label, creationDateTime <-- RIGHT}\n    //\n\n    const { todos, onDeleted, onToggleDone } = this.props;\n    const elements = todos.map((item) => {\n      const created = new Date(item.createTime);\n      const createTime = setInterval(\n        formatDistanceToNow(created, {\n          includeSeconds: true,\n        }),\n        1000\n      );\n      return (\n        <Task\n          key={item.id}\n          label={item.label}\n          onDeleted={() => onDeleted(item.id)}\n          onToggleDone={() => onToggleDone(item.id)}\n          completed={item.completed}\n          createTime={createTime}\n        />\n      );\n    });\n\n    return <ul className=\"todo-list\">{elements}</ul>;\n  }\n}\n\nTaskList.defaultProps = {\n  todos: [\n    { label: \"Default task 1\", completed: false, id: 1 },\n    { label: \"Default task 2\", completed: false, id: 2 },\n  ],\n  onToggleDone: () => {},\n  onDeleted: () => {},\n};\n\nTaskList.propTypes = {\n  todos: propTypes.arrayOf(propTypes.object),\n};\n"]},"metadata":{},"sourceType":"module"}
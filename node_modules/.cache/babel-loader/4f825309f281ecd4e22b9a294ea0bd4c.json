{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from 'react';\nimport TaskList from '../task-list';\nimport NewTaskForm from '../new-task-form';\nimport Footer from '../footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [this.createTask('Completed Task'), this.createTask('Editing Task'), this.createTask('Active Task')],\n      filter: 'All'\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.changeLabel = (id, label) => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        const newArr = todoData.map(el => {\n          if (el.id === id) {\n            return { ...el,\n              label,\n              completed: false,\n              edited: false\n            };\n          }\n\n          return el;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.editTask = id => {\n      this.setState(_ref5 => {\n        let {\n          todoData\n        } = _ref5;\n        const newArr = todoData.map(el => {\n          if (el.id === id) {\n            return { ...el,\n              edited: true\n            };\n          }\n\n          return el;\n        });\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.clearTasks = () => {\n      this.setState(_ref6 => {\n        let {\n          todoData\n        } = _ref6;\n        const newArr = [];\n\n        for (let i = 0; i < todoData.length; i++) {\n          if (!todoData[i].completed) {\n            newArr.push(todoData[i]);\n          }\n        }\n\n        return {\n          todoData: newArr\n        };\n      });\n    };\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n      createTime: new Date(),\n      edited: false\n    };\n  }\n\n  filterTasks(todoData, filter) {\n    if (filter === 'All') return todoData;\n\n    if (filter === 'Active') {\n      return todoData.filter(task => !task.completed);\n    }\n\n    if (filter === 'Completed') {\n      return todoData.filter(task => task.completed);\n    }\n  }\n\n  render() {\n    const {\n      todoData,\n      filter\n    } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList, {\n          todos: visibleTasks,\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone,\n          changeLabel: this.changeLabel,\n          editTask: this.editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount,\n          filter: filter,\n          onFilterChange: this.onFilterChange,\n          clearTasks: this.clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 4\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","createTask","filter","addTask","text","newTask","setState","newArr","deleteTask","id","idx","findIndex","el","newArray","slice","onToggleDone","oldTask","completed","changeLabel","label","map","edited","editTask","onFilterChange","clearTasks","i","length","push","createTime","Date","filterTasks","task","render","visibleTasks","completedCount","leftTasksCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,cAArB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,MAAP,MAAmB,WAAnB;;AAEA,eAAe,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1CK,KAD0C,GAClC,GADkC;AAAA,SAG1CC,KAH0C,GAGlC;AACPC,MAAAA,QAAQ,EAAE,CACT,KAAKC,UAAL,CAAgB,gBAAhB,CADS,EAET,KAAKA,UAAL,CAAgB,cAAhB,CAFS,EAGT,KAAKA,UAAL,CAAgB,aAAhB,CAHS,CADH;AAMPC,MAAAA,MAAM,EAAE;AAND,KAHkC;;AAAA,SAY1CC,OAZ0C,GAY/BC,IAAD,IAAU;AACnB,YAAMC,OAAO,GAAG,KAAKJ,UAAL,CAAgBG,IAAhB,CAAhB;AACA,WAAKE,QAAL,CAAc,QAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMO,MAAM,GAAG,CAAC,GAAGP,QAAJ,EAAcK,OAAd,CAAf;AACA,eAAO;AACNL,UAAAA,QAAQ,EAAEO;AADJ,SAAP;AAGA,OALD;AAMA,KApByC;;AAAA,SAgC1CC,UAhC0C,GAgC5BC,EAAD,IAAQ;AACpB,WAAKH,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMU,GAAG,GAAGV,QAAQ,CAACW,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACH,EAAH,KAAUA,EAArC,CAAZ;AACA,cAAMI,QAAQ,GAAG,CAAC,GAAGb,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAkBJ,GAAlB,CAAJ,EAA4B,GAAGV,QAAQ,CAACc,KAAT,CAAeJ,GAAG,GAAG,CAArB,CAA/B,CAAjB;AACA,eAAO;AACNV,UAAAA,QAAQ,EAAEa;AADJ,SAAP;AAGA,OAND;AAOA,KAxCyC;;AAAA,SA0C1CE,YA1C0C,GA0C1BN,EAAD,IAAQ;AACtB,WAAKH,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMU,GAAG,GAAGV,QAAQ,CAACW,SAAT,CAAoBC,EAAD,IAAQA,EAAE,CAACH,EAAH,KAAUA,EAArC,CAAZ;AACA,cAAMO,OAAO,GAAGhB,QAAQ,CAACU,GAAD,CAAxB;AACA,cAAML,OAAO,GAAG,EAAE,GAAGW,OAAL;AAAcC,UAAAA,SAAS,EAAE,CAACD,OAAO,CAACC;AAAlC,SAAhB;AACA,cAAMJ,QAAQ,GAAG,CAChB,GAAGb,QAAQ,CAACc,KAAT,CAAe,CAAf,EAAkBJ,GAAlB,CADa,EAEhBL,OAFgB,EAGhB,GAAGL,QAAQ,CAACc,KAAT,CAAeJ,GAAG,GAAG,CAArB,CAHa,CAAjB;AAKA,eAAO;AACNV,UAAAA,QAAQ,EAAEa;AADJ,SAAP;AAGA,OAZD;AAaA,KAxDyC;;AAAA,SA0D1CK,WA1D0C,GA0D5B,CAACT,EAAD,EAAKU,KAAL,KAAe;AAC5B,WAAKb,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMO,MAAM,GAAGP,QAAQ,CAACoB,GAAT,CAAcR,EAAD,IAAQ;AACnC,cAAIA,EAAE,CAACH,EAAH,KAAUA,EAAd,EAAkB;AACjB,mBAAO,EACN,GAAGG,EADG;AAENO,cAAAA,KAFM;AAGNF,cAAAA,SAAS,EAAE,KAHL;AAINI,cAAAA,MAAM,EAAE;AAJF,aAAP;AAMA;;AACD,iBAAOT,EAAP;AACA,SAVc,CAAf;AAWA,eAAO;AACNZ,UAAAA,QAAQ,EAAEO;AADJ,SAAP;AAGA,OAfD;AAgBA,KA3EyC;;AAAA,SA6E1Ce,QA7E0C,GA6E9Bb,EAAD,IAAQ;AAClB,WAAKH,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMO,MAAM,GAAGP,QAAQ,CAACoB,GAAT,CAAcR,EAAD,IAAQ;AACnC,cAAIA,EAAE,CAACH,EAAH,KAAUA,EAAd,EAAkB;AACjB,mBAAO,EACN,GAAGG,EADG;AAENS,cAAAA,MAAM,EAAE;AAFF,aAAP;AAIA;;AACD,iBAAOT,EAAP;AACA,SARc,CAAf;AASA,eAAO;AACNZ,UAAAA,QAAQ,EAAEO;AADJ,SAAP;AAGA,OAbD;AAcA,KA5FyC;;AAAA,SA8F1CgB,cA9F0C,GA8FxBrB,MAAD,IAAY;AAC5B,WAAKI,QAAL,CAAc;AAAEJ,QAAAA;AAAF,OAAd;AACA,KAhGyC;;AAAA,SA2G1CsB,UA3G0C,GA2G7B,MAAM;AAClB,WAAKlB,QAAL,CAAc,SAAkB;AAAA,YAAjB;AAAEN,UAAAA;AAAF,SAAiB;AAC/B,cAAMO,MAAM,GAAG,EAAf;;AACA,aAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGzB,QAAQ,CAAC0B,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACzC,cAAI,CAACzB,QAAQ,CAACyB,CAAD,CAAR,CAAYR,SAAjB,EAA4B;AAC3BV,YAAAA,MAAM,CAACoB,IAAP,CAAY3B,QAAQ,CAACyB,CAAD,CAApB;AACA;AACD;;AACD,eAAO;AACNzB,UAAAA,QAAQ,EAAEO;AADJ,SAAP;AAGA,OAVD;AAWA,KAvHyC;AAAA;;AAsB1CN,EAAAA,UAAU,CAACkB,KAAD,EAAQ;AACjB,WAAO;AACNA,MAAAA,KADM;AAENF,MAAAA,SAAS,EAAE,KAFL;AAGNR,MAAAA,EAAE,EAAE,KAAKX,KAAL,EAHE;AAIN8B,MAAAA,UAAU,EAAE,IAAIC,IAAJ,EAJN;AAKNR,MAAAA,MAAM,EAAE;AALF,KAAP;AAOA;;AAoEDS,EAAAA,WAAW,CAAC9B,QAAD,EAAWE,MAAX,EAAmB;AAC7B,QAAIA,MAAM,KAAK,KAAf,EAAsB,OAAOF,QAAP;;AACtB,QAAIE,MAAM,KAAK,QAAf,EAAyB;AACxB,aAAOF,QAAQ,CAACE,MAAT,CAAiB6B,IAAD,IAAU,CAACA,IAAI,CAACd,SAAhC,CAAP;AACA;;AAAC,QAAIf,MAAM,KAAK,WAAf,EAA4B;AAC7B,aAAOF,QAAQ,CAACE,MAAT,CAAiB6B,IAAD,IAAUA,IAAI,CAACd,SAA/B,CAAP;AACA;AACD;;AAgBDe,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEhC,MAAAA,QAAF;AAAYE,MAAAA;AAAZ,QAAuB,KAAKH,KAAlC;AACA,UAAMkC,YAAY,GAAG,KAAKH,WAAL,CAAiB9B,QAAjB,EAA2BE,MAA3B,CAArB;AACA,UAAMgC,cAAc,GAAGlC,QAAQ,CAACE,MAAT,CAAiBU,EAAD,IAAQA,EAAE,CAACK,SAA3B,EAAsCS,MAA7D;AACA,UAAMS,cAAc,GAAGnC,QAAQ,CAAC0B,MAAT,GAAkBQ,cAAzC;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACC,QAAC,WAAD;AAAa,QAAA,OAAO,EAAE,KAAK/B;AAA3B;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAS,QAAA,SAAS,EAAC,MAAnB;AAAA,gCACC,QAAC,QAAD;AACC,UAAA,KAAK,EAAE8B,YADR;AAEC,UAAA,SAAS,EAAE,KAAKzB,UAFjB;AAGC,UAAA,YAAY,EAAE,KAAKO,YAHpB;AAIC,UAAA,WAAW,EAAE,KAAKG,WAJnB;AAKC,UAAA,QAAQ,EAAE,KAAKI;AALhB;AAAA;AAAA;AAAA;AAAA,gBADD,eAQC,QAAC,MAAD;AACC,UAAA,cAAc,EAAEa,cADjB;AAEC,UAAA,MAAM,EAAEjC,MAFT;AAGC,UAAA,cAAc,EAAE,KAAKqB,cAHtB;AAIC,UAAA,UAAU,EAAE,KAAKC;AAJlB;AAAA;AAAA;AAAA;AAAA,gBARD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YADD;AAoBA;;AAnJyC","sourcesContent":["import React, { Component } from 'react';\nimport TaskList from '../task-list';\nimport NewTaskForm from '../new-task-form';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n\tmaxId = 100;\n\n\tstate = {\n\t\ttodoData: [\n\t\t\tthis.createTask('Completed Task'),\n\t\t\tthis.createTask('Editing Task'),\n\t\t\tthis.createTask('Active Task'),\n\t\t],\n\t\tfilter: 'All',\n\t};\n\n\taddTask = (text) => {\n\t\tconst newTask = this.createTask(text);\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = [...todoData, newTask];\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\tcreateTask(label) {\n\t\treturn {\n\t\t\tlabel,\n\t\t\tcompleted: false,\n\t\t\tid: this.maxId++,\n\t\t\tcreateTime: new Date(),\n\t\t\tedited: false,\n\t\t};\n\t}\n\n\tdeleteTask = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id);\n\t\t\tconst newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray,\n\t\t\t};\n\t\t});\n\t};\n\n\tonToggleDone = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id);\n\t\t\tconst oldTask = todoData[idx];\n\t\t\tconst newTask = { ...oldTask, completed: !oldTask.completed };\n\t\t\tconst newArray = [\n\t\t\t\t...todoData.slice(0, idx),\n\t\t\t\tnewTask,\n\t\t\t\t...todoData.slice(idx + 1),\n\t\t\t];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray,\n\t\t\t};\n\t\t});\n\t};\n\n\tchangeLabel = (id, label) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = todoData.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...el,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tcompleted: false,\n\t\t\t\t\t\tedited: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn el;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\teditTask = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = todoData.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...el,\n\t\t\t\t\t\tedited: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn el;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\tonFilterChange = (filter) => {\n\t\tthis.setState({ filter });\n\t};\n\n\tfilterTasks(todoData, filter) {\n\t\tif (filter === 'All') return todoData;\n\t\tif (filter === 'Active') {\n\t\t\treturn todoData.filter((task) => !task.completed);\n\t\t} if (filter === 'Completed') {\n\t\t\treturn todoData.filter((task) => task.completed);\n\t\t}\n\t}\n\n\tclearTasks = () => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = [];\n\t\t\tfor (let i = 0; i < todoData.length; i++) {\n\t\t\t\tif (!todoData[i].completed) {\n\t\t\t\t\tnewArr.push(todoData[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { todoData, filter } = this.state;\n\t\tconst visibleTasks = this.filterTasks(todoData, filter);\n\t\tconst completedCount = todoData.filter((el) => el.completed).length;\n\t\tconst leftTasksCount = todoData.length - completedCount;\n\n\t\treturn (\n\t\t\t<div className=\"todoapp\">\n\t\t\t\t<NewTaskForm addTask={this.addTask} />\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<TaskList\n\t\t\t\t\t\ttodos={visibleTasks}\n\t\t\t\t\t\tonDeleted={this.deleteTask}\n\t\t\t\t\t\tonToggleDone={this.onToggleDone}\n\t\t\t\t\t\tchangeLabel={this.changeLabel}\n\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t/>\n\t\t\t\t\t<Footer\n\t\t\t\t\t\tleftTasksCount={leftTasksCount}\n\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\tonFilterChange={this.onFilterChange}\n\t\t\t\t\t\tclearTasks={this.clearTasks}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}
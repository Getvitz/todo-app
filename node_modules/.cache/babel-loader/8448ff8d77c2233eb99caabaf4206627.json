{"ast":null,"code":"var _jsxFileName = \"/Users/nadya/Desktop/React/kata/src/components/app/app.js\";\nimport React, { Component } from \"react\";\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class App extends Component {\n  constructor() {\n    super(...arguments);\n    this.maxId = 100;\n    this.state = {\n      todoData: [// this.createTask(\"Completed Task\"),\n        // this.createTask(\"Editing Task\"),\n        // this.createTask(\"Active Task\"),\n      ],\n      filter: \"All\"\n    };\n\n    this.onFilterChange = filter => {\n      this.setState({\n        filter\n      });\n    };\n\n    this.clearTasks = () => {\n      this.setState(_ref => {\n        let {\n          todoData\n        } = _ref;\n        const newArr = [];\n\n        for (let i = 0; i < todoData.length; i++) {\n          if (!todoData[i].completed) {\n            newArr.push(todoData[i]);\n          }\n        }\n\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.deleteTask = id => {\n      this.setState(_ref2 => {\n        let {\n          todoData\n        } = _ref2;\n        const idx = todoData.findIndex(el => el.id === id);\n        const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n\n    this.addTask = text => {\n      const newTask = this.createTask(text);\n      this.setState(_ref3 => {\n        let {\n          todoData\n        } = _ref3;\n        const newArr = [...todoData, newTask];\n        return {\n          todoData: newArr\n        };\n      });\n    };\n\n    this.onToggleDone = id => {\n      this.setState(_ref4 => {\n        let {\n          todoData\n        } = _ref4;\n        const idx = todoData.findIndex(el => el.id === id);\n        const oldTask = todoData[idx];\n        const newTask = { ...oldTask,\n          completed: !oldTask.completed\n        };\n        const newArray = [...todoData.slice(0, idx), newTask, ...todoData.slice(idx + 1)];\n        return {\n          todoData: newArray\n        };\n      });\n    };\n  }\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;else if (filter === \"Active\") {\n      return todoData.filter(task => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter(task => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++\n    };\n  }\n\n  render() {\n    const {\n      todoData,\n      filter\n    } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter(el => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todoapp\",\n      children: [/*#__PURE__*/_jsxDEV(NewTaskForm, {\n        addTask: this.addTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(TaskList // todos={visibleTasks}\n        , {\n          onDeleted: this.deleteTask,\n          onToggleDone: this.onToggleDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {\n          leftTasksCount: leftTasksCount,\n          filter: filter,\n          onFilterChange: this.onFilterChange,\n          clearTasks: this.clearTasks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nApp.defaultProps = {\n  visibleTasks: [{\n    label: \"ZZZ\",\n    completed: false,\n    id: this.maxId++\n  }, {\n    label: \"SSS\",\n    completed: false,\n    id: this.maxId++\n  }]\n};","map":{"version":3,"sources":["/Users/nadya/Desktop/React/kata/src/components/app/app.js"],"names":["React","Component","TaskList","NewTaskForm","Footer","App","maxId","state","todoData","filter","onFilterChange","setState","clearTasks","newArr","i","length","completed","push","deleteTask","id","idx","findIndex","el","newArray","slice","addTask","text","newTask","createTask","onToggleDone","oldTask","filterTasks","task","label","render","visibleTasks","completedCount","leftTasksCount","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport TaskList from \"../task-list\";\nimport NewTaskForm from \"../new-task-form\";\nimport Footer from \"../footer\";\n\nexport default class App extends Component {\n  maxId = 100;\n\n  state = {\n    todoData: [\n      // this.createTask(\"Completed Task\"),\n      // this.createTask(\"Editing Task\"),\n      // this.createTask(\"Active Task\"),\n    ],\n    filter: \"All\",\n  };\n\n  onFilterChange = (filter) => {\n    this.setState({ filter });\n  };\n\n  clearTasks = () => {\n    this.setState(({ todoData }) => {\n      const newArr = [];\n      for (let i = 0; i < todoData.length; i++) {\n        if (!todoData[i].completed) {\n          newArr.push(todoData[i]);\n        }\n      }\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  filterTasks(todoData, filter) {\n    if (filter === \"All\") return todoData;\n    else if (filter === \"Active\") {\n      return todoData.filter((task) => !task.completed);\n    } else if (filter === \"Completed\") {\n      return todoData.filter((task) => task.completed);\n    }\n  }\n\n  createTask(label) {\n    return {\n      label,\n      completed: false,\n      id: this.maxId++,\n    };\n  }\n\n  deleteTask = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n\n      const newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  addTask = (text) => {\n    const newTask = this.createTask(text);\n\n    this.setState(({ todoData }) => {\n      const newArr = [...todoData, newTask];\n      return {\n        todoData: newArr,\n      };\n    });\n  };\n\n  onToggleDone = (id) => {\n    this.setState(({ todoData }) => {\n      const idx = todoData.findIndex((el) => el.id === id);\n      const oldTask = todoData[idx];\n      const newTask = { ...oldTask, completed: !oldTask.completed };\n      const newArray = [\n        ...todoData.slice(0, idx),\n        newTask,\n        ...todoData.slice(idx + 1),\n      ];\n      return {\n        todoData: newArray,\n      };\n    });\n  };\n\n  render() {\n    const { todoData, filter } = this.state;\n    const visibleTasks = this.filterTasks(todoData, filter);\n    const completedCount = todoData.filter((el) => el.completed).length;\n    const leftTasksCount = todoData.length - completedCount;\n\n    return (\n      <div className=\"todoapp\">\n        <NewTaskForm addTask={this.addTask} />\n        <section className=\"main\">\n          <TaskList\n            // todos={visibleTasks}\n            onDeleted={this.deleteTask}\n            onToggleDone={this.onToggleDone}\n          />\n          <Footer\n            leftTasksCount={leftTasksCount}\n            filter={filter}\n            onFilterChange={this.onFilterChange}\n            clearTasks={this.clearTasks}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n\nApp.defaultProps = {\n  visibleTasks: [\n    { label: \"ZZZ\", completed: false, id: this.maxId++ },\n    { label: \"SSS\", completed: false, id: this.maxId++ },\n  ],\n};\n"]},"metadata":{},"sourceType":"module"}
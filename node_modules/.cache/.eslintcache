[{"/Users/nadya/Desktop/React/kata/src/index.js":"1","/Users/nadya/Desktop/React/kata/src/components/app/index.js":"2","/Users/nadya/Desktop/React/kata/src/components/app/app.js":"3","/Users/nadya/Desktop/React/kata/src/components/task/index.js":"4","/Users/nadya/Desktop/React/kata/src/components/new-task-form/index.js":"5","/Users/nadya/Desktop/React/kata/src/components/task-list/index.js":"6","/Users/nadya/Desktop/React/kata/src/components/task-filter/index.js":"7","/Users/nadya/Desktop/React/kata/src/components/footer/index.js":"8","/Users/nadya/Desktop/React/kata/src/components/new-task-form/new-task-form.js":"9","/Users/nadya/Desktop/React/kata/src/components/task-list/task-list.js":"10","/Users/nadya/Desktop/React/kata/src/components/task/task.js":"11","/Users/nadya/Desktop/React/kata/src/components/footer/footer.js":"12","/Users/nadya/Desktop/React/kata/src/components/task-filter/task-filter.js":"13","/Users/nadya/Desktop/React/kata/src/components/edit-task-form/index.js":"14","/Users/nadya/Desktop/React/kata/src/components/edit-task-form/edit-task-form.js":"15"},{"size":179,"mtime":1641744634867,"results":"16","hashOfConfig":"17"},{"size":49,"mtime":1641751417784,"results":"18","hashOfConfig":"17"},{"size":3209,"mtime":1641749689285,"results":"19","hashOfConfig":"17"},{"size":49,"mtime":1641687573701,"results":"20","hashOfConfig":"17"},{"size":72,"mtime":1641687573701,"results":"21","hashOfConfig":"17"},{"size":62,"mtime":1641687573701,"results":"22","hashOfConfig":"17"},{"size":68,"mtime":1641687573701,"results":"23","hashOfConfig":"17"},{"size":55,"mtime":1641687573701,"results":"24","hashOfConfig":"17"},{"size":798,"mtime":1641744634867,"results":"25","hashOfConfig":"17"},{"size":1191,"mtime":1641744634867,"results":"26","hashOfConfig":"17"},{"size":1844,"mtime":1641744634867,"results":"27","hashOfConfig":"17"},{"size":781,"mtime":1641744634867,"results":"28","hashOfConfig":"17"},{"size":612,"mtime":1641744634867,"results":"29","hashOfConfig":"17"},{"size":75,"mtime":1641687573700,"results":"30","hashOfConfig":"17"},{"size":1012,"mtime":1641744634867,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"ab8bh8",{"filePath":"36","messages":"37","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"35"},{"filePath":"41","messages":"42","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"35"},{"filePath":"47","messages":"48","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"35"},{"filePath":"59","messages":"60","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},{"filePath":"62","messages":"63","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"35"},{"filePath":"65","messages":"66","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"35"},{"filePath":"71","messages":"72","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"35"},{"filePath":"74","messages":"75","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"35"},"/Users/nadya/Desktop/React/kata/src/index.js",["77"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './components/app';\n\nReactDOM.render(<App />, document.getElementById('app'));\n",["78","79","80","81","82"],"/Users/nadya/Desktop/React/kata/src/components/app/index.js",["83"],"/Users/nadya/Desktop/React/kata/src/components/app/app.js",["84"],"import React, { Component } from 'react';\nimport TaskList from '../task-list';\nimport NewTaskForm from '../new-task-form';\nimport Footer from '../footer';\n\nexport default class App extends Component {\n\tmaxId = 100;\n\n\tstate = {\n\t\ttodoData: [\n\t\t\tthis.createTask('Completed Task'),\n\t\t\tthis.createTask('Editing Task'),\n\t\t\tthis.createTask('Active Task'),\n\t\t],\n\t\tfilter: 'All',\n\t};\n\n\taddTask = (text) => {\n\t\tconst newTask = this.createTask(text);\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = [...todoData, newTask];\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\tcreateTask(label) {\n\t\treturn {\n\t\t\tlabel,\n\t\t\tcompleted: false,\n\t\t\tid: this.maxId++,\n\t\t\tcreateTime: new Date(),\n\t\t\tedited: false,\n\t\t};\n\t}\n\n\tdeleteTask = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id);\n\t\t\tconst newArray = [...todoData.slice(0, idx), ...todoData.slice(idx + 1)];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray,\n\t\t\t};\n\t\t});\n\t};\n\n\tonToggleDone = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst idx = todoData.findIndex((el) => el.id === id);\n\t\t\tconst oldTask = todoData[idx];\n\t\t\tconst newTask = { ...oldTask, completed: !oldTask.completed };\n\t\t\tconst newArray = [\n\t\t\t\t...todoData.slice(0, idx),\n\t\t\t\tnewTask,\n\t\t\t\t...todoData.slice(idx + 1),\n\t\t\t];\n\t\t\treturn {\n\t\t\t\ttodoData: newArray,\n\t\t\t};\n\t\t});\n\t};\n\n\tchangeLabel = (id, label) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = todoData.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...el,\n\t\t\t\t\t\tlabel,\n\t\t\t\t\t\tcompleted: false,\n\t\t\t\t\t\tedited: false,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn el;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\teditTask = (id) => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = todoData.map((el) => {\n\t\t\t\tif (el.id === id) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...el,\n\t\t\t\t\t\tedited: true,\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\treturn el;\n\t\t\t});\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\tonFilterChange = (filter) => {\n\t\tthis.setState({ filter });\n\t};\n\n\tfilterTasks(todoData, filter) {\n\t\tif (filter === 'All') return todoData;\n\t\tif (filter === 'Active') {\n\t\t\treturn todoData.filter((task) => !task.completed);\n\t\t} if (filter === 'Completed') {\n\t\t\treturn todoData.filter((task) => task.completed);\n\t\t}\n\t}\n\n\tclearTasks = () => {\n\t\tthis.setState(({ todoData }) => {\n\t\t\tconst newArr = [];\n\t\t\tfor (let i = 0; i < todoData.length; i++) {\n\t\t\t\tif (!todoData[i].completed) {\n\t\t\t\t\tnewArr.push(todoData[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\ttodoData: newArr,\n\t\t\t};\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { todoData, filter } = this.state;\n\t\tconst visibleTasks = this.filterTasks(todoData, filter);\n\t\tconst completedCount = todoData.filter((el) => el.completed).length;\n\t\tconst leftTasksCount = todoData.length - completedCount;\n\n\t\treturn (\n\t\t\t<div className=\"todoapp\">\n\t\t\t\t<NewTaskForm addTask={this.addTask} />\n\t\t\t\t<section className=\"main\">\n\t\t\t\t\t<TaskList\n\t\t\t\t\t\ttodos={visibleTasks}\n\t\t\t\t\t\tonDeleted={this.deleteTask}\n\t\t\t\t\t\tonToggleDone={this.onToggleDone}\n\t\t\t\t\t\tchangeLabel={this.changeLabel}\n\t\t\t\t\t\teditTask={this.editTask}\n\t\t\t\t\t/>\n\t\t\t\t\t<Footer\n\t\t\t\t\t\tleftTasksCount={leftTasksCount}\n\t\t\t\t\t\tfilter={filter}\n\t\t\t\t\t\tonFilterChange={this.onFilterChange}\n\t\t\t\t\t\tclearTasks={this.clearTasks}\n\t\t\t\t\t/>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t);\n\t}\n}\n","/Users/nadya/Desktop/React/kata/src/components/task/index.js",["85"],"import Task from './task';\n\nexport default Task;\n","/Users/nadya/Desktop/React/kata/src/components/new-task-form/index.js",["86"],"import NewTaskForm from './new-task-form';\n\nexport default NewTaskForm;\n","/Users/nadya/Desktop/React/kata/src/components/task-list/index.js",["87"],"import TaskList from './task-list';\n\nexport default TaskList;\n","/Users/nadya/Desktop/React/kata/src/components/task-filter/index.js",["88"],"import TaskFilter from './task-filter';\n\nexport default TaskFilter;\n","/Users/nadya/Desktop/React/kata/src/components/footer/index.js",["89"],"import Footer from './footer';\n\nexport default Footer;\n","/Users/nadya/Desktop/React/kata/src/components/new-task-form/new-task-form.js",["90"],"import React from 'react';\nimport { Component } from 'react/cjs/react.production.min';\n\nexport default class NewTaskForm extends Component {\n\tstate = {\n\t\tlabel: '',\n\t};\n\n\tonLabelChange = (e) => {\n\t\tthis.setState({\n\t\t\tlabel: e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n\t\t});\n\t};\n\n\tonSubmit = (e) => {\n\t\te.preventDefault();\n\t\tthis.props.addTask(this.state.label);\n\t\tthis.setState({\n\t\t\tlabel: '',\n\t\t});\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"header\">\n\t\t\t\t<h1>todos</h1>\n\t\t\t\t<form onSubmit={this.onSubmit}>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName=\"new-todo\"\n\t\t\t\t\t\tplaceholder=\"What needs to be done?\"\n\t\t\t\t\t\tautoFocus\n\t\t\t\t\t\tonChange={this.onLabelChange}\n\t\t\t\t\t\tvalue={this.state.label}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className=\"add-btn\">Add to list</button>\n\t\t\t\t</form>\n\t\t\t</header>\n\t\t);\n\t}\n}\n","/Users/nadya/Desktop/React/kata/src/components/task-list/task-list.js",["91"],"import { formatDistanceToNow } from 'date-fns';\nimport propTypes from 'prop-types';\nimport { Component } from 'react/cjs/react.production.min';\nimport Task from '../task';\n\nexport default class TaskList extends Component {\n\trender() {\n\t\tconst {\n\t\t\ttodos, onDeleted, onToggleDone, editTask, changeLabel,\n\t\t} = this.props;\n\t\tconst elements = todos.map((item) => {\n\t\t\tconst created = new Date(item.createTime);\n\t\t\tconst createTimeToNow = formatDistanceToNow(created, {\n\t\t\t\tincludeSeconds: true,\n\t\t\t});\n\t\t\tconst { id } = item;\n\t\t\treturn (\n\t\t\t\t<Task\n\t\t\t\t\tkey={id}\n\t\t\t\t\tid={id}\n\t\t\t\t\tlabel={item.label}\n\t\t\t\t\tonDeleted={() => onDeleted(id)}\n\t\t\t\t\tonToggleDone={() => onToggleDone(id)}\n\t\t\t\t\tcompleted={item.completed}\n\t\t\t\t\tcreateTimeToNow={createTimeToNow}\n\t\t\t\t\teditTask={() => editTask(id)}\n\t\t\t\t\tchangeLabel={changeLabel}\n\t\t\t\t\tedited={item.edited}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\n\t\treturn <ul className=\"todo-list\">{elements}</ul>;\n\t}\n}\n\nTaskList.defaultProps = {\n\ttodos: [\n\t\t{ label: 'Default task 1', completed: false, id: 1 },\n\t\t{ label: 'Default task 2', completed: false, id: 2 },\n\t],\n\tonToggleDone: () => {},\n\tonDeleted: () => {},\n};\n\nTaskList.propTypes = {\n\ttodos: propTypes.arrayOf(propTypes.object),\n};\n","/Users/nadya/Desktop/React/kata/src/components/task/task.js",["92"],"import { Component } from 'react/cjs/react.production.min';\nimport EditTaskForm from '../edit-task-form';\n\nexport default class Task extends Component {\n\tstatic defaultProps = {\n\t\tlabel: 'Nothing received..',\n\t\tcompleted: false,\n\t\tonDeleted: () => {},\n\t\tonToggleDone: () => {},\n\t\t// checked: false,\n\t};\n\n\tstatic propTypes = {\n\t\tlabel: (props, propName, componentName) => {\n\t\t\tconst value = props[propName];\n\t\t\tif (typeof value === 'string') return null;\n\t\t\treturn new TypeError(`${componentName}: ${propName} must be string`);\n\t\t},\n\n\t\tcompleted: (props, propName, componentName) => {\n\t\t\tconst value = props[propName];\n\t\t\tif (typeof value === 'boolean') return null;\n\t\t\treturn new TypeError(`${componentName}: ${propName} must be boolean`);\n\t\t},\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tlabel,\n\t\t\tid,\n\t\t\tonDeleted,\n\t\t\tonToggleDone,\n\t\t\tcompleted,\n\t\t\tcreateTimeToNow,\n\t\t\teditTask,\n\t\t\tchangeLabel,\n\t\t\tedited,\n\t\t} = this.props;\n\t\tlet checked = false;\n\t\tlet classNames = 'view';\n\t\tif (completed === true) {\n\t\t\tclassNames += ' completed';\n\t\t\tchecked = true;\n\t\t}\n\t\tif (edited === true) {\n\t\t\tclassNames += ' editing';\n\t\t}\n\n\t\treturn (\n\t\t\t<li key={id} className={classNames}>\n\t\t\t\t<input\n\t\t\t\t\tclassName=\"toggle\"\n\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\tonClick={onToggleDone}\n\t\t\t\t\treadOnly\n\t\t\t\t\tchecked={checked}\n\t\t\t\t/>\n\t\t\t\t<label onClick={onToggleDone}>\n\t\t\t\t\t<span className=\"description\">\n\t\t\t\t\t\t{label\n              || alert(\n              \t'You created empty task! Please delete it and type smth before adding to list!',\n              )}\n\t\t\t\t\t</span>\n\t\t\t\t\t<span className=\"created\">{createTimeToNow}</span>\n\t\t\t\t</label>\n\t\t\t\t<button className=\"icon icon-edit\" onClick={editTask}></button>\n\t\t\t\t<button className=\"icon icon-destroy\" onClick={onDeleted}></button>\n\t\t\t\t{edited ? (\n\t\t\t\t\t<EditTaskForm id={id} label={label} changeLabel={changeLabel} />\n\t\t\t\t) : null}\n\t\t\t</li>\n\t\t);\n\t}\n}\n","/Users/nadya/Desktop/React/kata/src/components/footer/footer.js",["93"],"import propTypes from 'prop-types';\nimport TaskFilter from '../task-filter';\n\nconst Footer = ({\n\tleftTasksCount, filter, onFilterChange, clearTasks,\n}) => (\n\t<footer className=\"footer\">\n\t\t<span className=\"todo-count\">{leftTasksCount} items left</span>\n\t\t<TaskFilter filter={filter} onFilterChange={onFilterChange} />\n\t\t<button className=\"clear-completed\" onClick={clearTasks}>\n        Clear completed\n\t\t</button>\n\t</footer>\n);\n\nFooter.defaultProps = {\n\tfilter: 'Active',\n\tleftTasksCount: 0,\n};\n\nFooter.propTypes = {\n\tfilter: (props, propName, componentName) => {\n\t\tconst value = props[propName];\n\t\tif (typeof value === 'string') return null;\n\t\treturn new TypeError(`${componentName}: ${propName} must be string`);\n\t},\n\n\tleftTasksCount: propTypes.number,\n};\n\nexport default Footer;\n","/Users/nadya/Desktop/React/kata/src/components/task-filter/task-filter.js",["94"],"const filterButtons = [\n\t{ name: 'All', label: 'All' },\n\t{ name: 'Active', label: 'Active' },\n\t{ name: 'Completed', label: 'Completed' },\n];\n\nconst TaskFilter = ({ filter, onFilterChange = () => {} }) => {\n\tconst buttons = filterButtons.map(({ name, label }) => {\n\t\tconst isActive = name === filter;\n\t\tconst classNames = isActive ? 'selected' : '';\n\t\treturn (\n\t\t\t<li key={name}>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => onFilterChange(name)}\n\t\t\t\t\tclassName={classNames}\n\t\t\t\t>\n\t\t\t\t\t{label}\n\t\t\t\t</button>\n\t\t\t</li>\n\t\t);\n\t});\n\n\treturn <ul className=\"filters\">{buttons}</ul>;\n};\n\nexport default TaskFilter;\n","/Users/nadya/Desktop/React/kata/src/components/edit-task-form/index.js",["95"],"import EditTaskForm from './edit-task-form';\n\nexport default EditTaskForm;\n","/Users/nadya/Desktop/React/kata/src/components/edit-task-form/edit-task-form.js",["96"],"// import react from \"react\";\nimport PropTypes from 'prop-types';\nimport { Component } from 'react/cjs/react.production.min';\n\nexport default class EditTaskForm extends Component {\n\tstate = {\n\t\tnewLabel: '',\n\t};\n\n\tstatic defaultProps = {\n\t\tdescription: '',\n\t\tchangeLabel: () => {},\n\t};\n\n\tstatic propTypes = {\n\t\tlabel: PropTypes.string,\n\t\tid: PropTypes.number.isRequired,\n\t\tchangeLabel: PropTypes.func,\n\t};\n\n\tonLabelChange = (e) => {\n\t\tthis.setState({\n\t\t\tnewLabel:\n        e.target.value.charAt(0).toUpperCase() + e.target.value.slice(1),\n\t\t});\n\t};\n\n\tonKeyPress = (event) => {\n\t\tconst { changeLabel, id, label } = this.props;\n\t\tconst { newLabel } = this.state;\n\n\t\tif (event.key === 'Enter') {\n\t\t\tif (newLabel === '') {\n\t\t\t\tchangeLabel(id, label);\n\t\t\t} else {\n\t\t\t\tchangeLabel(id, newLabel);\n\t\t\t}\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { label } = this.props;\n\t\treturn (\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tclassName=\"edit\"\n\t\t\t\tplaceholder={label}\n\t\t\t\tonChange={this.onLabelChange}\n\t\t\t\tonKeyPress={this.onKeyPress}\n\t\t\t/>\n\t\t);\n\t}\n}\n",{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":null,"fatal":true,"severity":2,"message":"108"},{"ruleId":null,"fatal":true,"severity":2,"message":"108"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},{"ruleId":null,"fatal":true,"severity":2,"message":"97"},"Parsing error: Must use import to load ES Module: /Users/nadya/Desktop/React/kata/node_modules/eslint-scope/lib/definition.js\nrequire() of ES modules is not supported.\nrequire() of /Users/nadya/Desktop/React/kata/node_modules/eslint-scope/lib/definition.js from /Users/nadya/Desktop/React/kata/node_modules/babel-eslint/lib/require-from-eslint.js is an ES module file as it is a .js file whose nearest parent package.json contains \"type\": \"module\" which defines all .js files in that package scope as ES modules.\nInstead rename definition.js to end in .cjs, change the requiring code to use import(), or remove \"type\": \"module\" from /Users/nadya/Desktop/React/kata/node_modules/eslint-scope/package.json.","lines-around-directive",["109"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"Parsing error: Cannot use import statement outside a module","padding-line-between-statements"]